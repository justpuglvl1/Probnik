<Window x:Class="Курсовая.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Курсовая"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1600">
    
    <Grid Background="#F7F3F2">
        <Grid.RowDefinitions >
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="5">
            <Button Width="100" HorizontalAlignment="Left" Margin="210 3 0 3" Content="Найти" Click="Button_Click"/>
            <Button Width="100" HorizontalAlignment="Right" Margin="210 0 0 0" Content="Добавить" Click="Button_Click_2"/>
            <TextBox Width="200" HorizontalAlignment="Left" Margin="0 0 0 0" x:Name="txt1"/>
            <TextBlock x:Name="b1" HorizontalAlignment="Left" Width="100" Margin="350 0 0 0" VerticalAlignment="Center"/>
            <TextBlock x:Name="b2" HorizontalAlignment="Left" Width="100" Margin="450 0 0 0" VerticalAlignment="Center"/>
            <TextBlock x:Name="b3" HorizontalAlignment="Left" Width="100" Margin="530 0 0 0" VerticalAlignment="Center"/>
            <TextBlock x:Name="b4" HorizontalAlignment="Left" Width="100" Margin="620 0 0 0" VerticalAlignment="Center"/>
            <TextBlock x:Name="b5" HorizontalAlignment="Left" Width="200" Margin="760 0 0 0" VerticalAlignment="Center"/>
        </Grid>

        <DataGrid x:Name="dtg" Grid.Row="1" Margin="5" AutoGenerateColumns="False" CanUserAddRows="False" SelectionChanged="dtg_SelectionChanged">

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Редактировать" Click="MenuItem_Click" />
                    <MenuItem Header="Удалить" Click="MenuItem_Click_1" />
                    <MenuItem Header="Выгрузить в Excel" Click="MenuItem_Click_3" />
                    <MenuItem Header="Обновить" Click="MenuItem_Click_2" />
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFDADFF2"/>
                            <Setter Property="Foreground" Value="#FF2E2F34"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.RowHeaderStyle>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.RowHeaderStyle>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(ItemsControl.AlternationIndex)}" Value="0">
                            <Setter Property="Background" Value="White"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(ItemsControl.AlternationIndex)}" Value="1">
                            <Setter Property="Background" Value="#F0F0F2"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="ФИО"                             Width="200" Binding="{Binding FullName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Должность"                       Width="Auto" Binding="{Binding Post, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Категория"                       Width="Auto" Binding="{Binding Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Ученая степень"                  Width="Auto" Binding="{Binding Academic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Педнагрузка"                     Width="Auto" Binding="{Binding TeachingLoad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Педназгрузка ОВЗ"                Width="Auto" Binding="{Binding TeachingLoadOVZ, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Внеурочная детяельность"         Width="Auto" Binding="{Binding Activitie, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Количество детей в классе"       Width="Auto" Binding="{Binding Childrens, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Количество детей в классе с ОВЗ" Width="Auto" Binding="{Binding ChildrensOVZ, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Классное руководство"            Width="Auto" Binding="{Binding ClasseTeacher, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Доплаты"                         Width="Auto" Binding="{Binding Surcharges, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Стаж"                         Width="Auto" Binding="{Binding Experience, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="Сумма"                         Width="*" Binding="{Binding Salary, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
